{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\Desktop\\\\smash-ultimatum\\\\smash\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./pages/LoginScreen/loginScreen\";\nimport Dashboard from \"./pages/MainDashboard/mainDashboard\";\nimport Arena from \"./pages/Arena/arena\";\nimport axios from \"axios\";\nimport API from \"./utils/API\";\nimport UserContext from \"./utils/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // logged in user data that is linked to usercontext\n  const [userState, setUserState] = useState({\n    id: \"\",\n    name: \"\",\n    portrait: \"\",\n    LobbyCode: \"\",\n    participants: [],\n    competitors: \"\",\n    brawlers: \"\"\n  }); //function to update user context passed down as prop\n\n  const updateContext = (LobbyCode, participants, brawlers) => {\n    setUserState({ ...userState,\n      LobbyCode: LobbyCode,\n      participants: participants,\n      brawlers: brawlers\n    });\n  }; // sets userState on login\n\n\n  useEffect(() => {\n    axios.get(\"/User\").then(res => {\n      if (res.data.id) {\n        API.getUserByUserId(res.data.id).then(res => {\n          setUserState({ ...userState,\n            id: res.data._id,\n            name: res.data.name,\n            portrait: res.data.portrait\n          });\n        });\n      } else {\n        return;\n      }\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: userState,\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/dashboard\",\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {\n            updateContext: updateContext\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/arena\",\n          component: Arena\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"KJzjGkl9nA1T80L1QltkFg/vaJw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vince/Desktop/smash-ultimatum/smash/client/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Switch","Route","Login","Dashboard","Arena","axios","API","UserContext","App","userState","setUserState","id","name","portrait","LobbyCode","participants","competitors","brawlers","updateContext","get","then","res","data","getUserByUserId","_id","catch","err","console","log"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./pages/LoginScreen/loginScreen\";\nimport Dashboard from \"./pages/MainDashboard/mainDashboard\";\nimport Arena from \"./pages/Arena/arena\";\nimport axios from \"axios\";\nimport API from \"./utils/API\";\nimport UserContext from \"./utils/UserContext\";\n\nfunction App() {\n  // logged in user data that is linked to usercontext\n  const [userState, setUserState] = useState({\n    id: \"\",\n    name: \"\",\n    portrait: \"\",\n    LobbyCode: \"\",\n    participants: [],\n    competitors: \"\",\n    brawlers: \"\"\n  });\n\n  //function to update user context passed down as prop\n  const updateContext = (LobbyCode, participants, brawlers) => {\n    setUserState({\n      ...userState,\n      LobbyCode: LobbyCode,\n      participants: participants,\n      brawlers: brawlers\n    })\n  }\n  // sets userState on login\n  useEffect(() => {\n    axios\n      .get(\"/User\")\n      .then((res) => {\n        if (res.data.id) {\n          API.getUserByUserId(res.data.id)\n            .then(res => {\n              setUserState({\n                ...userState,\n                id: res.data._id,\n                name: res.data.name,\n                portrait: res.data.portrait,\n              });\n            });\n        }\n        else {\n          return;\n        }\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n        <UserContext.Provider value={userState} id=\"container\">\n          <BrowserRouter>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path=\"/dashboard\" >\n                <Dashboard updateContext={updateContext} />\n              </Route>\n              <Route path=\"/arena\" component={Arena} />\n            </Switch>\n          </BrowserRouter>\n        </UserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}