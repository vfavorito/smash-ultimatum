{"ast":null,"code":"import axios from \"axios\";\nconst API = {\n  // Returns users using their initial google id, stored in user.userId\n  getUserByUserId: function (id) {\n    return axios.get(\"/api/users/userid/\" + id);\n  },\n  getUserByName: function (name) {\n    return axios.get(\"/api/users/name/\" + name);\n  },\n  getAllUsers: function () {\n    return axios.get(\"/api/users\");\n  },\n  // Saves an Arena to the database\n  saveArena: function (groupData, id) {\n    return axios.post(\"/api/arenas/\" + id, groupData);\n  },\n  //Returns an Arena's info by searching lobbyCode\n  getArenaByLobbyCode: function (id) {\n    return axios.get(\"/api/arenas/find/\" + id);\n  },\n  //adds Participant to arena\n  addArenaParticipant: function (id, participantData) {\n    return axios.put(\"/api/arenas/addParticipant/\" + id, participantData);\n  },\n  // to update anything about the arena document\n  updateArena: function (id, data) {\n    return axios.put(\"/api/arenas/update/\" + id, data);\n  },\n  // to update stats of user document\n  updateUserByName: function (name, data) {\n    return axios.put(\"/api/users/update/\" + name, data);\n  }\n};\nexport default API;","map":{"version":3,"sources":["C:/Users/vince/Desktop/smash-ultimatum/smash/client/src/utils/API.js"],"names":["axios","API","getUserByUserId","id","get","getUserByName","name","getAllUsers","saveArena","groupData","post","getArenaByLobbyCode","addArenaParticipant","participantData","put","updateArena","data","updateUserByName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG;AAER;AACAC,EAAAA,eAAe,EAAE,UAAUC,EAAV,EAAc;AAC3B,WAAOH,KAAK,CAACI,GAAN,CAAU,uBAAuBD,EAAjC,CAAP;AACH,GALO;AAMRE,EAAAA,aAAa,EAAE,UAAUC,IAAV,EAAgB;AAC3B,WAAON,KAAK,CAACI,GAAN,CAAU,qBAAqBE,IAA/B,CAAP;AACH,GARO;AASRC,EAAAA,WAAW,EAAE,YAAY;AACrB,WAAOP,KAAK,CAACI,GAAN,CAAU,YAAV,CAAP;AACH,GAXO;AAYR;AACAI,EAAAA,SAAS,EAAE,UAAUC,SAAV,EAAqBN,EAArB,EAAyB;AAChC,WAAOH,KAAK,CAACU,IAAN,CAAW,iBAAiBP,EAA5B,EAAgCM,SAAhC,CAAP;AACH,GAfO;AAgBR;AACAE,EAAAA,mBAAmB,EAAE,UAAUR,EAAV,EAAc;AAC/B,WAAOH,KAAK,CAACI,GAAN,CAAU,sBAAsBD,EAAhC,CAAP;AACH,GAnBO;AAoBR;AACAS,EAAAA,mBAAmB,EAAE,UAAUT,EAAV,EAAcU,eAAd,EAA8B;AAC/C,WAAOb,KAAK,CAACc,GAAN,CAAU,gCAAgCX,EAA1C,EAA8CU,eAA9C,CAAP;AACH,GAvBO;AAwBR;AACAE,EAAAA,WAAW,EAAE,UAASZ,EAAT,EAAaa,IAAb,EAAkB;AAC3B,WAAOhB,KAAK,CAACc,GAAN,CAAU,wBAAwBX,EAAlC,EAAsCa,IAAtC,CAAP;AACH,GA3BO;AA4BR;AACAC,EAAAA,gBAAgB,EAAE,UAASX,IAAT,EAAeU,IAAf,EAAoB;AAClC,WAAOhB,KAAK,CAACc,GAAN,CAAU,uBAAuBR,IAAjC,EAAuCU,IAAvC,CAAP;AACH;AA/BO,CAAZ;AAiCA,eAAef,GAAf","sourcesContent":["import axios from \"axios\";\n\nconst API = {\n    \n    // Returns users using their initial google id, stored in user.userId\n    getUserByUserId: function (id) {\n        return axios.get(\"/api/users/userid/\" + id);\n    },\n    getUserByName: function (name) {\n        return axios.get(\"/api/users/name/\" + name);\n    },\n    getAllUsers: function () {\n        return axios.get(\"/api/users\");\n    },\n    // Saves an Arena to the database\n    saveArena: function (groupData, id) {\n        return axios.post(\"/api/arenas/\" + id, groupData);\n    },\n    //Returns an Arena's info by searching lobbyCode\n    getArenaByLobbyCode: function (id) {\n        return axios.get(\"/api/arenas/find/\" + id);\n    },\n    //adds Participant to arena\n    addArenaParticipant: function (id, participantData){\n        return axios.put(\"/api/arenas/addParticipant/\" + id, participantData)\n    },\n    // to update anything about the arena document\n    updateArena: function(id, data){\n        return axios.put(\"/api/arenas/update/\" + id, data)\n    },\n    // to update stats of user document\n    updateUserByName: function(name, data){\n        return axios.put(\"/api/users/update/\" + name, data)\n    }\n};\nexport default API;"]},"metadata":{},"sourceType":"module"}